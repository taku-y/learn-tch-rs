use tch::Tensor;

fn main() {
    println!("=== t1 ===");
    let t1 = Tensor::of_slice(&[3., 1., 4., 5., 8., 2., 1., 1e-30f32, 4., 4.]).reshape(&[2, 5]);
    t1.print();

    println!("=== t1 + t1.min() ===");
    (&t1 + t1.min()).print();

    println!("=== t1 + 1e-100f32 * t1.min() ===");
    (&t1 + 1e-100f32 * t1.min()).print();

    //     === t1 ===
    //     3.0000e+00  1.0000e+00  4.0000e+00  5.0000e+00  8.0000e+00
    //     2.0000e+00  1.0000e+00  1.0000e-30  4.0000e+00  4.0000e+00
    //    [ CPUFloatType{2,5} ]
    //    === t1 + t1.min() ===
    //     3.0000e+00  1.0000e+00  4.0000e+00  5.0000e+00  8.0000e+00
    //     2.0000e+00  1.0000e+00  2.0000e-30  4.0000e+00  4.0000e+00
    //    [ CPUFloatType{2,5} ]
    //    === t1 + 1e-100f32 * t1.min() ===
    //     3.0000e+00  1.0000e+00  4.0000e+00  5.0000e+00  8.0000e+00
    //     2.0000e+00  1.0000e+00  1.0000e-30  4.0000e+00  4.0000e+00
    //    [ CPUFloatType{2,5} ]
}
